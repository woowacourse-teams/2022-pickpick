plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id "org.sonarqube" version "3.4.0.2513"
    id "jacoco"
}

group = 'com.pickpick'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    asciidoctorExtensions
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.slack.api:slack-api-client:1.23.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-apt:5.0.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'io.rest-assured:rest-assured:4.4.0'
    testImplementation 'org.mockito:mockito-inline'
    testImplementation 'org.mockito:mockito-core'

    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

asciidoctor {
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir
    sources {
        include("**/index.adoc")
    }
    baseDirFollowsSourceFile()
    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/main/resources/static')
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("${asciidoctor.outputDir}")
    into file("src/main/resources/static")
}

task buildDocument(type: Copy) {
    dependsOn copyDocument
    from file("src/main/resources/static")
    into file("build/resources/main/static")
}

bootJar {
    dependsOn buildDocument
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

sonarqube {
  properties {
    property "sonar.projectKey", "woowacourse-teams_2022-pickpick_AYKlZap98dMo58Zrdp2E"
  }
}

jacoco {
  toolVersion = '0.8.8'
}

jacocoTestReport {
  reports {
    xml.enabled true
  }
}
